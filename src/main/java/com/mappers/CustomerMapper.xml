<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    
    <mapper namespace="com.mappers.CustomerMapper">
    
    <resultMap id="result" type="Customer">
    	<result property="SSN"  column="SSN"/>
        <result property="rating" column="Rating"/>   
        <result property="email" column="Email"/> 
        <result property="creditCardNumber" column="CreditCardNumber"/> 
         <result property="firstName" column="FirstName"/>
         <result property="lastName" column="LastName"/> 
    	 <result property="address" column="Address"/> 
    	 <result property="zipCode" column="ZipCode"/> 
    	 <result property="telephone" column="Telephone"/> 
             
    </resultMap>
    
    <select id="selectAll" resultMap="result">
        SELECT * 
        FROM Customer 
        INNER JOIN Person
        ON Customer.Id=Person.SSN
   
    </select>
       
      <select id="selectById" resultMap="result">
        SELECT SSN, Email, Rating, CreditCardNumber, LastName, FirstName,Address, ZipCode, Telephone
        FROM Customer
        INNER JOIN Person
        ON Customer.Id=Person.SSN
        WHERE Customer.Id = #{SSN}
    </select>
    
      
        <insert id="insertCustomer">
    INSERT INTO Customer(FirstName, LastName, Address, ZipCode, Telephone,Rating, Id, Email, CreditCardNumber)
    VALUES(#{person.firstName}, #{person.lastName}, #{person.Address}, #{person.zipCode}, #{person.telephone},    #{customer.rating}, #{customer.id}, #{customer.email}, #{customer.creditCardNumber});
    </insert>
 
          
    
    
    
    <update id="updateCustomerInfo">
    	UPDATE Customer
    	<set>
    	<if test= "customer.creditCardNumber !=null"> CreditCardNumber = #{customer.creditCardNumber},</if>
    	<if test= "customer.password !=null"> Password = #{customer.password}</if>
    	</set>
  		WHERE Id = 111111111;
    
    </update>
    
   	<update id="updatePersonInfo">
    	UPDATE Person
    	<set>
    	<if test= "customer.address !=null"> Address = #{customer.address},</if>
	   	<if test= "customer.telephone !=null"> Telephone = #{customer.telephone},</if>
    	<if test= "customer.zipcode != null"> ZipCode = #{customer.zipcode}</if>
    	</set>
  		WHERE SSN = 111111111;
    </update>
    
    <update id="updateAccountInfo">
    	UPDATE Account
    	<set>
    	<if test= "customer.plan != null"> AccountTypeLK = #{customer.plan}</if>
    	</set>
  		WHERE Id = 1;
    </update>
    
    <select id="mostActive" resultMap="result">
    SELECT Person.FirstName
    FROM Person 
	INNER JOIN Account
	ON Person.SSN = Account.Customer 
	INNER JOIN Rental
	ON Account.Id= Rental.AccountId
	GROUP BY FirstName 
	ORDER BY COUNT(*) DESC
	LIMIT 2;
    
    </select>
    
    
    
    
    <select id="currentMovies" resultMap="result">
    
    SELECT Movie.Name 
    FROM Customer 
    LEFT JOIN Account
    ON Customer.Id = Account.Customer 
    LEFT JOIN Rental 
    ON Account.Id= Rental.AccountId
    LEFT JOIN Movie 
    ON Rental.MovieId=Movie.Id
    LEFT JOIN Orders
    ON Rental.OrderId =Orders.Id
    WHERE Customer.Id= #{id}
    AND Orders.ReturnDate IS NULL
    
    
  
    </select>
    
    
    
    <select id="customerQueue" resultMap="result">
    

    
    
      SELECT Movie.name
    FROM MovieQ
    INNER JOIN Movie
    ON MovieQ.MovieId= Movie.Id
    WHERE AccountId=#{id}

    </select>
    
    
    <select id="pastOrders" resultMap="result">
    
    SELECT Orders.DateTime , Orders.Id
    AS ORDER_ID , Movie.Name
    FROM Customer
    LEFT JOIN Account 
    ON Customer.Id = Account.Customer
    LEFT JOIN Rental
    ON Account.ID = Rental.AccountId
    LEFT JOIN Movie
    ON Rental.MovieId = Movie.Id
    LEFT JOIN Orders
    ON Rental.OrderId= Orders.Id
    WHERE Customer.Id = #{id}

    
    
    
    
    </select>
       
    </mapper>